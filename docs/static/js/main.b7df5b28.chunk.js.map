{"version":3,"sources":["tetris-bg.mp3","Tetris/components/Pixel/Pixel.js","Tetris/components/Grid/Grid.js","Tetris/Shapes/Shape.js","Tetris/Shapes/SquareShape.js","Tetris/Shapes/BarShape.js","Tetris/Shapes/FlipLShape.js","Tetris/Shapes/LShape.js","Tetris/Shapes/SShape.js","Tetris/Shapes/TShape.js","Tetris/Shapes/ZShape.js","Tetris/Shapes/ShapeFactory.js","Tetris/TetrisController.js","Tetris/Tetris.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Pixel","props","classNames","isFilled","push","className","join","defaultProps","Grid","rows","cols","pixelMap","pixelRows","i","pixelCols","j","key","Shape","this","size","orientations","SquareShape","BarShape","FlipLShape","LShape","SShape","TShape","ZShape","SHAPE_TYPES","ShapeFactory","getShape","shape","getRandomShape","Math","floor","random","TetrisController","view","deregisterView","initGame","shapePosition","shapeRotation","unclearPixelMap","getEmptyPixelMap","isSpeedUp","isGameEnded","timer","startGame","setTimeout","doGameTick","getNextShape","endGame","alert","moveShapeDown","updateView","setState","col","addShapeToUnclearPixelMap","orientation","x","y","actualX","actualY","calculatePixelMap","hasCollision","isGameOver","findRowsToClear","rowsToClear","isRowFull","clearRows","length","splice","m","n","unshift","shapeFactory","newShapePosition","redraw","moveShapeLeft","moveShapeRight","rotateShape","totalOrientations","newShapeRotation","speedUp","clearTimeout","speedDown","Tetris","handleKeyDown","e","keyCode","gameController","handleKeyUp","state","document","addEventListener","removeEventListener","React","Component","App","src","tetrisBg","type","autoPlay","loop","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b7df5b28.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tetris-bg.4ae866dc.mp3\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Pixel.css\";\n\nfunction Pixel(props) {\n  const { isFilled } = props;\n\n  const classNames = [\"pixel\"];\n  if (isFilled) {\n    classNames.push(\"pixel--filled\");\n  }\n\n  return <div className={classNames.join(\" \")}></div>;\n}\n\nPixel.propTypes = {\n  isFilled: PropTypes.bool\n};\n\nPixel.defaultProps = {\n  isFilled: false\n};\n\nexport default Pixel;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Pixel from \"../Pixel/Pixel\";\n\nimport \"./Grid.css\";\n\nfunction Grid(props) {\n  const { rows, cols, pixelMap } = props;\n\n  const pixelRows = [];\n  for (var i = 0; i < rows; i++) {\n    const pixelCols = [];\n\n    for (var j = 0; j < cols; j++) {\n      pixelCols.push(<Pixel key={`${i},${j}`} isFilled={pixelMap[i][j]} />);\n    }\n\n    pixelRows.push(<div key={`row-${i}`}>{pixelCols}</div>);\n  }\n\n  return <div className=\"grid\">{pixelRows}</div>;\n}\n\nGrid.propTypes = {\n  rows: PropTypes.number,\n  cols: PropTypes.number,\n  pixelMap: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.bool)).isRequired\n};\n\nGrid.defaultProps = {\n  rows: 20,\n  cols: 10\n};\n\nexport default Grid;\n","class Shape {\n  constructor() {\n    this.size = 0;\n    this.orientations = null;\n  }\n}\n\nexport default Shape;\n","import Shape from \"./Shape\";\n\nclass SquareShape extends Shape {\n  constructor(props) {\n    super(props);\n\n    this.size = 2;\n    this.orientations = [\n      [\n        [1, 1],\n        [1, 1]\n      ]\n    ];\n  }\n}\n\nexport default SquareShape;\n","import Shape from \"./Shape\";\n\nclass BarShape extends Shape {\n  constructor(props) {\n    super(props);\n\n    this.size = 4;\n    this.orientations = [\n      [\n        [0, 1, 0, 0],\n        [0, 1, 0, 0],\n        [0, 1, 0, 0],\n        [0, 1, 0, 0]\n      ],\n      [\n        [0, 0, 0, 0],\n        [1, 1, 1, 1],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0]\n      ]\n    ];\n  }\n}\n\nexport default BarShape;\n","import Shape from \"./Shape\";\n\nclass FlipLShape extends Shape {\n  constructor(props) {\n    super(props);\n\n    this.size = 3;\n    this.orientations = [\n      [\n        [0, 0, 1],\n        [0, 0, 1],\n        [0, 1, 1]\n      ],\n      [\n        [1, 0, 0],\n        [1, 1, 1],\n        [0, 0, 0]\n      ],\n      [\n        [1, 1, 0],\n        [1, 0, 0],\n        [1, 0, 0]\n      ],\n      [\n        [1, 1, 1],\n        [0, 0, 1],\n        [0, 0, 0]\n      ]\n    ];\n  }\n}\n\nexport default FlipLShape;\n","import Shape from \"./Shape\";\n\nclass LShape extends Shape {\n  constructor(props) {\n    super(props);\n\n    this.size = 3;\n    this.orientations = [\n      [\n        [1, 0, 0],\n        [1, 0, 0],\n        [1, 1, 0]\n      ],\n      [\n        [0, 0, 1],\n        [1, 1, 1],\n        [0, 0, 0]\n      ],\n      [\n        [0, 1, 1],\n        [0, 0, 1],\n        [0, 0, 1]\n      ],\n      [\n        [1, 1, 1],\n        [1, 0, 0],\n        [0, 0, 0]\n      ]\n    ];\n  }\n}\n\nexport default LShape;\n","import Shape from \"./Shape\";\n\nclass SShape extends Shape {\n  constructor(props) {\n    super(props);\n\n    this.size = 3;\n    this.orientations = [\n      [\n        [0, 1, 1],\n        [1, 1, 0],\n        [0, 0, 0]\n      ],\n      [\n        [0, 1, 0],\n        [0, 1, 1],\n        [0, 0, 1]\n      ]\n    ];\n  }\n}\n\nexport default SShape;\n","import Shape from \"./Shape\";\n\nclass TShape extends Shape {\n  constructor(props) {\n    super(props);\n\n    this.size = 3;\n    this.orientations = [\n      [\n        [0, 1, 0],\n        [1, 1, 1],\n        [0, 0, 0]\n      ],\n      [\n        [0, 1, 0],\n        [0, 1, 1],\n        [0, 1, 0]\n      ],\n      [\n        [0, 0, 0],\n        [1, 1, 1],\n        [0, 1, 0]\n      ],\n      [\n        [0, 1, 0],\n        [1, 1, 0],\n        [0, 1, 0]\n      ]\n    ];\n  }\n}\n\nexport default TShape;\n","import Shape from \"./Shape\";\n\nclass ZShape extends Shape {\n  constructor(props) {\n    super(props);\n\n    this.size = 3;\n    this.orientations = [\n      [\n        [1, 1, 0],\n        [0, 1, 1],\n        [0, 0, 0]\n      ],\n      [\n        [0, 0, 1],\n        [0, 1, 1],\n        [0, 1, 0]\n      ]\n    ];\n  }\n}\n\nexport default ZShape;\n","import SquareShape from \"./SquareShape\";\nimport BarShape from \"./BarShape\";\nimport FlipLShape from \"./FlipLShape\";\nimport LShape from \"./LShape\";\nimport SShape from \"./SShape\";\nimport TShape from \"./TShape\";\nimport ZShape from \"./ZShape\";\n\nexport const TOTAL_SHAPES = 7;\n\nexport const SHAPE_TYPES = {\n  SQUARE: 0,\n  T: 1,\n  S: 2,\n  Z: 3,\n  BAR: 4,\n  L: 5,\n  FLIP_L: 6\n};\n\nclass ShapeFactory {\n  getShape = shape => {\n    switch (shape) {\n      case SHAPE_TYPES.SQUARE:\n        return new SquareShape();\n      case SHAPE_TYPES.T:\n        return new TShape();\n      case SHAPE_TYPES.S:\n        return new SShape();\n      case SHAPE_TYPES.Z:\n        return new ZShape();\n      case SHAPE_TYPES.BAR:\n        return new BarShape();\n      case SHAPE_TYPES.L:\n        return new LShape();\n      case SHAPE_TYPES.FLIP_L:\n        return new FlipLShape();\n      default:\n        return new BarShape();\n    }\n  };\n\n  getRandomShape = () => {\n    const shape = Math.floor(Math.random() * TOTAL_SHAPES);\n\n    return this.getShape(shape);\n  };\n}\n\nexport default ShapeFactory;\n","import ShapeFactory from \"./Shapes/ShapeFactory\";\n\nconst ROWS = 20;\nconst COLS = 10;\n\nclass TetrisController {\n  constructor(view) {\n    this.view = view;\n\n    this.shapeFactory = new ShapeFactory();\n  }\n\n  deregisterView = () => {\n    this.view = null;\n  };\n\n  initGame = () => {\n    // game state\n    this.shape = null;\n    this.shapePosition = [0, 0];\n    this.shapeRotation = 0;\n    this.unclearPixelMap = this.getEmptyPixelMap();\n    this.isSpeedUp = false;\n    this.isGameEnded = false;\n    this.timer = null;\n  };\n\n  startGame = () => {\n    this.timer = setTimeout(this.doGameTick, 500);\n\n    this.getNextShape();\n  };\n\n  endGame = () => {\n    this.isGameEnded = true;\n\n    alert(\"Game Over!\");\n  };\n\n  doGameTick = () => {\n    if (!this.isGameEnded) {\n      // move the block down 1 pixel\n      this.moveShapeDown();\n\n      // do next tick\n      this.timer = setTimeout(this.doGameTick, this.isSpeedUp ? 200 : 500);\n    } else {\n      this.initGame();\n      this.startGame();\n    }\n  };\n\n  updateView = pixelMap => {\n    if (this.view) {\n      this.view.setState({\n        pixelMap\n      });\n    }\n  };\n\n  getEmptyPixelMap = () => {\n    const pixelMap = [];\n\n    for (var i = 0; i < ROWS; i++) {\n      const col = [];\n\n      for (var j = 0; j < COLS; j++) {\n        col.push(false);\n      }\n\n      pixelMap.push(col);\n    }\n\n    return pixelMap;\n  };\n\n  addShapeToUnclearPixelMap = () => {\n    const orientation = this.shape.orientations[this.shapeRotation];\n    const size = this.shape.size;\n    const [x, y] = this.shapePosition;\n\n    for (var i = 0; i < size; i++) {\n      for (var j = 0; j < size; j++) {\n        // only check if the pixel on the shape is filled\n        if (orientation[i][j] === 1) {\n          const actualX = x + j;\n          const actualY = y + i;\n\n          if (\n            actualX >= 0 &&\n            actualX < COLS &&\n            actualY >= 0 &&\n            actualY < ROWS\n          ) {\n            this.unclearPixelMap[actualY][actualX] = true;\n          }\n        }\n      }\n    }\n  };\n\n  calculatePixelMap = () => {\n    const pixelMap = this.getEmptyPixelMap();\n    const orientation = this.shape.orientations[this.shapeRotation];\n    const size = this.shape.size;\n    const [x, y] = this.shapePosition;\n\n    for (var i = 0; i < ROWS; i++) {\n      for (var j = 0; j < COLS; j++) {\n        pixelMap[i][j] = this.unclearPixelMap[i][j];\n      }\n    }\n\n    for (i = 0; i < size; i++) {\n      for (j = 0; j < size; j++) {\n        // only check if the pixel on the shape is filled\n        if (orientation[i][j] === 1) {\n          const actualX = x + j;\n          const actualY = y + i;\n\n          if (\n            actualX >= 0 &&\n            actualX < COLS &&\n            actualY >= 0 &&\n            actualY < ROWS\n          ) {\n            pixelMap[actualY][actualX] = true;\n          }\n        }\n      }\n    }\n\n    return pixelMap;\n  };\n\n  hasCollision = (shapePosition, shapeRotation) => {\n    const orientation = this.shape.orientations[shapeRotation];\n    const size = this.shape.size;\n    const [x, y] = shapePosition;\n\n    for (var i = 0; i < size; i++) {\n      for (var j = 0; j < size; j++) {\n        // only check if the pixel on the shape is filled\n        if (orientation[i][j] === 1) {\n          const actualX = x + j;\n          const actualY = y + i;\n\n          // ignore if still above the top\n          if (actualY < 0) {\n            continue;\n          }\n\n          // check if hitting the bottom wall\n          if (actualY >= ROWS) {\n            return true;\n          }\n\n          // check if hitting the left and right walls\n          if (actualX < 0 || actualX >= COLS) {\n            return true;\n          }\n\n          // check if hitting an unclear pixel\n          if (this.unclearPixelMap[actualY][actualX] === true) {\n            return true;\n          }\n        }\n      }\n    }\n\n    return false;\n  };\n\n  isGameOver = () => {\n    const orientation = this.shape.orientations[this.shapeRotation];\n    const size = this.shape.size;\n    const y = this.shapePosition[1];\n\n    for (var i = 0; i < size; i++) {\n      for (var j = 0; j < size; j++) {\n        // only check if the pixel on the shape is filled\n        if (orientation[i][j] === 1) {\n          const actualY = y + i;\n\n          // ignore if still above the top\n          if (actualY < 0) {\n            return true;\n          }\n        }\n      }\n    }\n\n    return false;\n  };\n\n  findRowsToClear = () => {\n    const rowsToClear = [];\n\n    for (var i = 0; i < ROWS; i++) {\n      var isRowFull = true;\n      for (var j = 0; j < COLS; j++) {\n        isRowFull &= this.unclearPixelMap[i][j];\n      }\n\n      if (isRowFull) {\n        rowsToClear.push(i);\n      }\n    }\n\n    return rowsToClear;\n  };\n\n  clearRows = rowsToClear => {\n    // clear unwanted rows\n    for (var i = rowsToClear.length - 1; i >= 0; i--) {\n      this.unclearPixelMap.splice(rowsToClear[i], 1);\n    }\n\n    // append empty rows back\n    for (var m = 0; m < rowsToClear.length; m++) {\n      const col = [];\n\n      for (var n = 0; n < COLS; n++) {\n        col.push(false);\n      }\n\n      this.unclearPixelMap.unshift(col);\n    }\n  };\n\n  getNextShape = () => {\n    this.shape = this.shapeFactory.getRandomShape();\n    this.shapeRotation = Math.floor(\n      Math.random() * this.shape.orientations.length\n    );\n    this.shapePosition = [\n      Math.floor((COLS - this.shape.size) / 2), // middle of tower\n      -this.shape.size // top of tower\n    ];\n  };\n\n  moveShapeDown = () => {\n    const newShapePosition = [this.shapePosition[0], this.shapePosition[1] + 1];\n\n    if (!this.hasCollision(newShapePosition, this.shapeRotation)) {\n      this.shapePosition = [...newShapePosition];\n    } else {\n      if (this.isGameOver()) {\n        this.endGame();\n      } else {\n        this.addShapeToUnclearPixelMap();\n\n        const rowsToClear = this.findRowsToClear();\n        this.clearRows(rowsToClear);\n\n        this.getNextShape();\n      }\n    }\n\n    this.redraw();\n  };\n\n  moveShapeLeft = () => {\n    const newShapePosition = [this.shapePosition[0] - 1, this.shapePosition[1]];\n\n    if (!this.hasCollision(newShapePosition, this.shapeRotation)) {\n      this.shapePosition = [...newShapePosition];\n\n      this.redraw();\n    }\n  };\n\n  moveShapeRight = () => {\n    const newShapePosition = [this.shapePosition[0] + 1, this.shapePosition[1]];\n\n    if (!this.hasCollision(newShapePosition, this.shapeRotation)) {\n      this.shapePosition = [...newShapePosition];\n\n      this.redraw();\n    }\n  };\n\n  rotateShape = () => {\n    const totalOrientations = this.shape.orientations.length;\n    const newShapeRotation = (this.shapeRotation + 1) % totalOrientations;\n\n    if (!this.hasCollision(this.shapePosition, newShapeRotation)) {\n      this.shapeRotation = newShapeRotation;\n\n      this.redraw();\n    }\n  };\n\n  speedUp = () => {\n    this.isSpeedUp = true;\n\n    clearTimeout(this.timer);\n\n    // schedule anotehr game tick\n    this.doGameTick();\n  };\n\n  speedDown = () => {\n    this.isSpeedUp = false;\n  };\n\n  redraw = () => {\n    // update the pixelMap\n    const pixelMap = this.calculatePixelMap();\n\n    // update the view with game state\n    this.updateView(pixelMap);\n  };\n}\n\nexport default TetrisController;\n","import React from \"react\";\nimport Grid from \"./components/Grid/Grid\";\n\nimport TetrisController from \"./TetrisController\";\n\nclass Tetris extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.gameController = new TetrisController(this);\n    this.gameController.initGame();\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.gameController.startGame();\n\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n    document.addEventListener(\"keyup\", this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n    document.removeEventListener(\"keyup\", this.handleKeyUp);\n\n    this.gameController.deregisterView();\n  }\n\n  handleKeyDown = e => {\n    switch (e.keyCode) {\n      case 32: // SPACE\n      case 38: // UP\n        this.gameController.rotateShape();\n        break;\n      case 37: // LEFT\n        this.gameController.moveShapeLeft();\n        break;\n      case 39: // RIGHT\n        this.gameController.moveShapeRight();\n        break;\n      case 40: // DOWN\n        this.gameController.speedUp();\n        break;\n      default:\n        break;\n    }\n  };\n\n  handleKeyUp = e => {\n    switch (e.keyCode) {\n      case 40: // DOWN\n        this.gameController.speedDown();\n        break;\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const { pixelMap } = this.state;\n\n    return <div>{pixelMap && <Grid pixelMap={pixelMap} />}</div>;\n  }\n}\n\nexport default Tetris;\n","import React from \"react\";\nimport Tetris from \"./Tetris/Tetris\";\nimport tetrisBg from \"./tetris-bg.mp3\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Tetris />\n      <audio src={tetrisBg} type=\"audio/mpeg\" autoPlay={true} loop={true} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}